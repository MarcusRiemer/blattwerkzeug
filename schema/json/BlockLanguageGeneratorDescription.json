{
  "$ref": "#/definitions/BlockLanguageGeneratorDescription",
  "$schema": "http://json-schema.org/draft-06/schema#",
  "definitions": {
    "AllTypeInstructions": {
      "additionalProperties": {
        "additionalProperties": {
          "$ref": "#/definitions/TypeInstructions"
        },
        "type": "object"
      },
      "description": "Supplementary generation instructions for all types.",
      "type": "object"
    },
    "AttributeMappingOrder": {
      "anyOf": [
        {
          "enum": [
            "grammar"
          ],
          "type": "string"
        },
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      ]
    },
    "BlockLanguageGeneratorDescription": {
      "additionalProperties": false,
      "description": "Describes how a grammar might be converted to a block language",
      "properties": {
        "editorComponents": {
          "items": {
            "$ref": "#/definitions/EditorComponentDescription"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "staticSidebars": {
          "items": {
            "$ref": "#/definitions/SidebarDescription"
          },
          "type": "array"
        },
        "typeInstructions": {
          "$ref": "#/definitions/AllTypeInstructions"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "DatabaseSchemaSidebarDescription": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "Unique identification for this type.",
          "enum": [
            "databaseSchema"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "EditorComponentDescription": {
      "$ref": "#/definitions/QueryPreviewComponentDescription",
      "description": "Any component that could be displayed in the actual editor view."
    },
    "FixedBlocksSidebarCategoryDescription": {
      "additionalProperties": false,
      "description": "Defines which blocks to show in a certain category.",
      "properties": {
        "blocks": {
          "items": {
            "$ref": "#/definitions/SidebarBlockDescription"
          },
          "type": "array"
        },
        "categoryCaption": {
          "type": "string"
        }
      },
      "required": [
        "categoryCaption",
        "blocks"
      ],
      "type": "object"
    },
    "FixedBlocksSidebarDescription": {
      "additionalProperties": false,
      "description": "Defines the overall look of a sidebar. It at least sorts available blocks\ninto categories.",
      "properties": {
        "caption": {
          "description": "The name that should be displayed to the user.",
          "type": "string"
        },
        "categories": {
          "description": "The actual blocks are categorized into categories.",
          "items": {
            "$ref": "#/definitions/FixedBlocksSidebarCategoryDescription"
          },
          "type": "array"
        },
        "type": {
          "description": "Unique identification for this type.",
          "enum": [
            "fixedBlocks"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "caption",
        "categories"
      ],
      "type": "object"
    },
    "IterationDropTarget": {
      "enum": [
        "start",
        "end",
        "none"
      ],
      "type": "string"
    },
    "MultiBlockInstructionsDescription": {
      "additionalProperties": false,
      "description": "Instructions on how to generate a type that is composed of multiple\nblocks.",
      "properties": {
        "blocks": {
          "items": {
            "$ref": "#/definitions/SingleBlockInstructionsDescription"
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "multi"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "blocks"
      ],
      "type": "object"
    },
    "NodeDescription": {
      "additionalProperties": false,
      "description": "This description regulates how all ASTs should be stored when\nwritten to disk or sent over the wire. It requires every\nnode to at least tell its name and some hint how a node can be\nconstructed at runtime.\n\nThe data of a node is split up in two broader categories:\nChildren, which may be nested and properties, which should\nnot allow any nesting.",
      "properties": {
        "children": {
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/NodeDescription"
            },
            "type": "array"
          },
          "description": "Nodes may have children in various categories. This base class\nmakes no assumptions about the names of children. Examples for\nchildren in multiple categories would be things like \"attributes\"\nand generic \"children\" in a specialization for XML.",
          "type": "object"
        },
        "language": {
          "description": "This is effectively a namespace, allowing identical\nnames for nodes in different languages.",
          "type": "string"
        },
        "name": {
          "description": "The name of this not, this is used to lookup the name of a\ncorresponding type.",
          "type": "string"
        },
        "properties": {
          "description": "Nodes may have all kinds of properties that are specific to their\nconcrete use.",
          "type": "object"
        }
      },
      "required": [
        "name",
        "language"
      ],
      "type": "object"
    },
    "Orientation": {
      "enum": [
        "horizontal",
        "vertical"
      ],
      "type": "string"
    },
    "QueryPreviewComponentDescription": {
      "additionalProperties": false,
      "properties": {
        "componentType": {
          "enum": [
            "query-preview"
          ],
          "type": "string"
        }
      },
      "required": [
        "componentType"
      ],
      "type": "object"
    },
    "SidebarBlockDescription": {
      "additionalProperties": false,
      "description": "Describes how the available types should be represented in the sidebar.\nIt is perfectly fine to have multiple sidebar descriptions for the\nsame underlying type.",
      "properties": {
        "defaultNode": {
          "$ref": "#/definitions/NodeDescription",
          "description": "This description will be instanciated every time an \"empty\" node\nis needed. This happens e.g. when the user starts dragging this\nblock from the sidebar."
        },
        "displayName": {
          "description": "The name to be displayed in the sidebar",
          "type": "string"
        }
      },
      "required": [
        "displayName",
        "defaultNode"
      ],
      "type": "object"
    },
    "SidebarDescription": {
      "anyOf": [
        {
          "$ref": "#/definitions/FixedBlocksSidebarDescription"
        },
        {
          "$ref": "#/definitions/DatabaseSchemaSidebarDescription"
        }
      ],
      "description": "All possible sidebar types"
    },
    "SingleBlockInstructionsDescription": {
      "additionalProperties": false,
      "description": "Instructions on how to generate a single block for a type.",
      "properties": {
        "attributes": {
          "additionalProperties": {
            "additionalProperties": false,
            "description": "Make all properties in T optional",
            "properties": {
              "attributeMapping": {
                "$ref": "#/definitions/AttributeMappingOrder"
              },
              "between": {
                "type": "string"
              },
              "generateDropTargets": {
                "$ref": "#/definitions/IterationDropTarget"
              },
              "onDrop": {
                "$ref": "#/definitions/VisualBlockDescriptions.DropTargetProperties"
              },
              "orientation": {
                "$ref": "#/definitions/Orientation"
              },
              "readOnly": {
                "type": "boolean"
              },
              "style": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "object"
        },
        "block": {
          "additionalProperties": false,
          "description": "Make all properties in T optional",
          "properties": {
            "attributeMapping": {
              "$ref": "#/definitions/AttributeMappingOrder"
            },
            "onDrop": {
              "$ref": "#/definitions/VisualBlockDescriptions.DropTargetProperties"
            },
            "orientation": {
              "$ref": "#/definitions/Orientation"
            },
            "style": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "enum": [
            "single"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "attributes"
      ],
      "type": "object"
    },
    "TypeInstructions": {
      "anyOf": [
        {
          "$ref": "#/definitions/SingleBlockInstructionsDescription"
        },
        {
          "$ref": "#/definitions/MultiBlockInstructionsDescription"
        }
      ],
      "description": "Any kind of instruction on how to create one or more blocks for a type."
    },
    "VisualBlockDescriptions.CategoryInsert": {
      "additionalProperties": false,
      "properties": {
        "category": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/VisualBlockDescriptions.CategoryInsertPosition"
        }
      },
      "required": [
        "order",
        "category"
      ],
      "type": "object"
    },
    "VisualBlockDescriptions.CategoryInsertPosition": {
      "description": "The locations of categories at which insertions may occur.",
      "enum": [
        "insertFirst",
        "insertLast"
      ],
      "type": "string"
    },
    "VisualBlockDescriptions.DropTargetProperties": {
      "additionalProperties": false,
      "description": "These properties are required to specify drop targets.",
      "properties": {
        "children": {
          "$ref": "#/definitions/VisualBlockDescriptions.CategoryInsert"
        },
        "parent": {
          "$ref": "#/definitions/VisualBlockDescriptions.CategoryInsert"
        },
        "self": {
          "additionalProperties": false,
          "properties": {
            "order": {
              "enum": [
                "insertBefore",
                "insertAfter"
              ],
              "type": "string"
            },
            "skipParents": {
              "type": "number"
            }
          },
          "required": [
            "order",
            "skipParents"
          ],
          "type": "object"
        },
        "visibility": {
          "items": {
            "enum": [
              "ifAnyDrag",
              "ifLegalDrag",
              "ifLegalChild",
              "ifEmpty",
              "always"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  }
}