language "XML (Dynamisch)" {
  type "dxml.element" {
    block {
      direction horizontal
      visual {
        "<"
        {{ name }}
        dropTarget {
          visibility ifEmpty ifLegalDrag
          direction horizontal
          visual {
            "+Attribute"
          }
          style {
            marginLeft: 10px
          }
        }
        iterate {
          childGroup "attributes"
          direction horizontal
        }
        ">"
        dropTarget {
          visibility ifLegalDrag
          direction horizontal
          visual {
            "+Element"
          }
          style {
            marginLeft: 10px
          }
        }
      }
    }
    iterate {
      childGroup "elements"
      direction vertical
      style {
        marginLeft: 10px
      }
    }
    block {
      direction horizontal
      visual {
        "</"
        {{ name }}
        ">"
      }
    }
  }
  type "dxml.attribute" {
    block {
      direction horizontal
      visual {
        {{ name }}
        "="
        "\""
        iterate {
          childGroup "value"
          direction horizontal
        }
        "\""
      }
      style {
        marginLeft: 10px
      }
    }
  }
  type "dxml.text" {
    block {
      direction horizontal
      visual {
        {{ value }}
      }
    }
  }
  type "dxml.interpolate" {
    block {
      direction horizontal
      visual {
        "{{"
        iterate {
          childGroup "expr"
          direction horizontal
        }
        "}}"
      }
    }
  }
  type "dxml.expr" {
    iterate {
      childGroup "concreteExpr"
      direction horizontal
    }
  }
  type "dxml.exprVar" {
    block {
      direction horizontal
      visual {
        {{ name }}
      }
    }
  }
  sidebarBlock "Element: ~~Complex~~" {
    category "Dynamisches XML"
    node "dxml.element" {
      prop "name" parent
      childGroup "elements" {
        node "dxml.text" {
          prop "value" before ...
        }
        node "dxml.element" {
          prop "name" child
        }
        node "dxml.text" {
          prop "value" after ...
        }
      }
      childGroup "attributes" {
        node "dxml.attribute" {
          prop "name" att1
          childGroup "value" {
          }
        }
      }
    }
  }
  sidebarBlock "Element: e1" {
    category "Dynamisches XML"
    node "dxml.element" {
      prop "name" e1
      childGroup "elements" {
      }
      childGroup "attributes" {
      }
    }
  }
  sidebarBlock "Element: e2" {
    category "Dynamisches XML"
    node "dxml.element" {
      prop "name" e2
      childGroup "elements" {
      }
      childGroup "attributes" {
      }
    }
  }
  sidebarBlock "Attribut: a1" {
    category "Dynamisches XML"
    node "dxml.attribute" {
      prop "name" a1
      childGroup "value" {
      }
    }
  }
  sidebarBlock "Attribut: a2" {
    category "Dynamisches XML"
    node "dxml.attribute" {
      prop "name" a2
      childGroup "value" {
      }
    }
  }
  sidebarBlock "Text" {
    category "Dynamisches XML"
    node "dxml.text" {
      prop "value" Neuer Text
    }
  }
  sidebarBlock "<%= var_a %>" {
    category "Dynamisches XML"
    node "dxml.interpolate" {
      childGroup "expr" {
        node "dxml.expr" {
          childGroup "concreteExpr" {
            node "dxml.exprVar" {
              prop "name" var_a
            }
          }
        }
      }
    }
  }
  sidebarBlock "Variable a" {
    category "Dynamisches XML"
    node "dxml.exprVar" {
      prop "name" var_a
    }
  }
  sidebarBlock "Variable b" {
    category "Dynamisches XML"
    node "dxml.exprVar" {
      prop "name" var_b
    }
  }
  sidebarBlock "<% if %>" {
    category "Dynamisches XML"
    node "dxml.if" {
      childGroup "condition" {
        node "dxml.expr" {
          childGroup "concreteExpr" {
          }
        }
      }
      childGroup "body" {
      }
    }
  }
}
