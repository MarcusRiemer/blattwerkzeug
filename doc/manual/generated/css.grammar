grammar "css" {
  node "document" {
    children allowed "rules" ::= rule+
  }
  node "rule" {
    children sequence "selectors" ::= selector+
    terminal "rule-open" "{"
    children allowed "declarations" ::= declaration+
    terminal "rule-close" "}"
  }
  typedef "selector" ::= selectorType | selectorClass | selectorId | selectorUniversal
  node "selectorType" {
    prop "value" { string }
  }
  node "selectorClass" {
    prop "value" { string }
  }
  node "selectorId" {
    prop "value" { string }
  }
  node "selectorUniversal" {
  }
  node "declaration" {
    children choice "name" ::= propertyName
    terminal "colon" ":"
    children choice "value" ::= exprColor | exprAny
  }
  node "propertyName" {
    prop "name" { string }
  }
  node "exprColor" {
    prop "value" { string }
  }
  node "exprAny" {
    prop "value" { string }
  }
}
