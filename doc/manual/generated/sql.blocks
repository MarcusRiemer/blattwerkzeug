language "SQL" {
  type "sql.querySelect" {
    iterate {
      childGroup "select"
      direction horizontal
    }
    iterate {
      childGroup "from"
      direction horizontal
    }
    dropTarget {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        parent "where", insertFirst
      }
      visual {
        "+WHERE"
      }
    }
    iterate {
      childGroup "where"
      direction horizontal
    }
    dropTarget {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        parent "groupBy", insertFirst
      }
      visual {
        "+GROUP BY"
      }
    }
    iterate {
      childGroup "groupBy"
      direction horizontal
    }
    dropTarget {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        parent "orderBy", insertFirst
      }
      visual {
        "+ORDER BY"
      }
    }
    iterate {
      childGroup "orderBy"
      direction horizontal
    }
  }
  type "sql.select" {
    block {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        children "columns", insertFirst
      }
      visual {
        "SELECT" {
          style {
            color: blue
            width: 9ch
            cursor: grab
            display: inline-block
            padding-left: 2px
          }
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "columns", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "columns"
          direction horizontal
          between {
            ", "
          }
        }
      }
    }
  }
  type "sql.columnName" {
    block {
      direction horizontal
      visual {
        {{ refTableName }}
        "."
        {{ columnName }}
      }
      style {
        border: 2px solid rgba(0, 255, 0, 0.6)
        cursor: grab
        margin-top: 2px
        paddingLeft: 10px
        borderRadius: 500px
        paddingRight: 10px
        margin-bottom: 2px
        background-color: rgba(0, 255, 0, 0.15)
      }
    }
  }
  type "sql.starOperator" {
    block {
      direction horizontal
      visual {
        "★"
      }
      style {
        border: 2px solid rgba(0, 255, 0, 0.6)
        cursor: grab
        margin-top: 2px
        paddingLeft: 10px
        paddingRight: 10px
        border-radius: 500px
        margin-bottom: 2px
        background-color: rgba(0, 255, 0, 0.15)
      }
    }
  }
  type "sql.parameter" {
    block {
      direction horizontal
      visual {
        ":"
        TODO: input blocks
      }
      style {
        border: 2px solid rgba(129, 129, 247, 1)
        cursor: grab
        margin-top: 2px
        paddingLeft: 10px
        borderRadius: 500px
        paddingRight: 10px
        margin-bottom: 2px
        background-color: rgba(129, 129, 247, 0.4)
      }
    }
  }
  type "sql.constant" {
    block {
      direction horizontal
      visual {
        TODO: input blocks
      }
      style {
        border: 2px solid rgba(0, 255, 0, 0.6)
        margin-top: 2px
        paddingLeft: 10px
        borderRadius: 500px
        paddingRight: 10px
        margin-bottom: 2px
        text-decoration: underline black dotted
        background-color: rgba(0, 255, 0, 0.15)
      }
    }
  }
  type "sql.functionCall" {
    block {
      direction horizontal
      visual {
        TODO: input blocks
        "("
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "arguments", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "arguments"
          direction horizontal
        }
        ")"
      }
      style {
        border: 2px solid rgba(255, 165, 0, 0.6)
        margin-top: 2px
        paddingLeft: 10px
        borderRadius: 500px
        paddingRight: 10px
        margin-bottom: 2px
        backgroundColor: rgba(255, 165, 0, 0.3)
      }
    }
  }
  type "sql.binaryExpression" {
    block {
      direction horizontal
      visual {
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "lhs", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "lhs"
          direction horizontal
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "operator", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "operator"
          direction horizontal
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "rhs", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "rhs"
          direction horizontal
        }
      }
      style {
        border: 2px solid rgba(255, 165, 0, 0.6)
        cursor: grab
        margin-top: 2px
        paddingLeft: 5px
        borderRadius: 500px
        paddingRight: 5px
        margin-bottom: 2px
        backgroundColor: rgba(255, 165, 0, 0.3)
      }
    }
  }
  type "sql.relationalOperator" {
    block {
      direction horizontal
      visual {
        TODO: input blocks
      }
    }
  }
  type "sql.from" {
    block {
      direction vertical
      visual {
        block {
          direction horizontal
          dropOptions {
            visible {"$var":"ifLegalChild"}
            children "tables", insertFirst
          }
          visual {
            "FROM" {
              style {
                color: blue
                width: 9ch
                display: inline-block
              }
            }
            dropTarget {
              direction horizontal
              dropOptions {
                visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
                children "tables", insertFirst
              }
              visual {
                "❓" {
                  style {
                    color: darkred
                    border: 2px solid red
                    cursor: default
                    paddingLeft: 10px
                    borderRadius: 500px
                    paddingRight: 10px
                    backgroundColor: orange
                  }
                }
              }
            }
            iterate {
              childGroup "tables"
              direction horizontal
              between {
                ","
              }
            }
          }
        }
        iterate {
          childGroup "joins"
          direction vertical
          between {
          }
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$var":"ifLegalChild"}
            children "joins", insertLast
          }
          visual {
            "+JOIN"
          }
        }
      }
      style {
        cursor: grab
      }
    }
  }
  type "sql.crossJoin" {
    block {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        children "table", insertFirst
      }
      visual {
        "JOIN" {
          style {
            color: blue
            width: 10ch
            display: inline-block
            marginLeft: 10px
          }
        }
        iterate {
          childGroup "table"
          direction horizontal
        }
      }
    }
  }
  type "sql.innerJoinUsing" {
    block {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        children "table", insertFirst
      }
      visual {
        "INNER JOIN" {
          style {
            color: blue
            width: 10ch
            cursor: grab
            display: inline-block
            marginLeft: 2ch
            marginRight: 1ch
          }
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "table", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "table"
          direction horizontal
        }
        "USING" {
          style {
            color: blue
            cursor: grab
            display: inline-block
            marginLeft: 1ch
            marginRight: 1ch
          }
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "using", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "using"
          direction horizontal
        }
      }
    }
  }
  type "sql.innerJoinOn" {
    block {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        children "table", insertFirst
      }
      visual {
        "INNER JOIN" {
          style {
            color: blue
            width: 10ch
            cursor: grab
            display: inline-block
            marginLeft: 2ch
            marginRight: 1ch
          }
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "table", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "table"
          direction horizontal
        }
        "ON" {
          style {
            color: blue
            cursor: grab
            display: inline-block
            marginLeft: 1ch
            marginRight: 1ch
          }
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "on", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "on"
          direction horizontal
        }
      }
    }
  }
  type "sql.tableIntroduction" {
    block {
      direction horizontal
      visual {
        {{ name }}
      }
      style {
        border: 2px solid rgba(255, 255, 0, 0.9)
        cursor: grab
        margin-top: 2px
        paddingLeft: 10px
        borderRadius: 500px
        paddingRight: 10px
        margin-bottom: 2px
        background-color: rgba(255, 255, 0, 0.2)
      }
    }
  }
  type "sql.where" {
    block {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        children "expressions", insertFirst
      }
      visual {
        "WHERE" {
          style {
            color: blue
            width: 9ch
            display: inline-block
          }
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "expressions", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "expressions"
          direction horizontal
          between {
            ", "
          }
        }
      }
    }
  }
  type "sql.groupBy" {
    block {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        children "expressions", insertFirst
      }
      visual {
        "GROUP BY" {
          style {
            color: blue
            width: 9ch
            display: inline-block
          }
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "expressions", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "expressions"
          direction horizontal
          between {
            ", "
          }
        }
      }
      style {
        cursor: grab
      }
    }
  }
  type "sql.orderBy" {
    block {
      direction horizontal
      dropOptions {
        visible {"$var":"ifLegalChild"}
        children "expressions", insertFirst
      }
      visual {
        "ORDER BY" {
          style {
            color: blue
            width: 9ch
            display: inline-block
          }
        }
        dropTarget {
          direction horizontal
          dropOptions {
            visible {"$some":[{"$var":"ifEmpty"},{"$var":"ifLegalChild"}]}
            children "expressions", insertFirst
          }
          visual {
            "❓" {
              style {
                color: darkred
                border: 2px solid red
                cursor: default
                paddingLeft: 10px
                borderRadius: 500px
                paddingRight: 10px
                backgroundColor: orange
              }
            }
          }
        }
        iterate {
          childGroup "expressions"
          direction horizontal
          between {
            ", "
          }
        }
      }
      style {
        cursor: grab
      }
    }
  }
  databaseSchemaSidebar
  fixedBlocksSidebar "SQL" {
    category "Ausdrücke" {
      sidebarBlock "★" {
        node "sql.starOperator"
      }
      sidebarBlock ":parameter" {
        node "sql.parameter" {
          prop "name" param
        }
      }
      sidebarBlock "Konstante" {
        node "sql.constant" {
          prop "value" wert
        }
      }
      sidebarBlock "Binärer Ausdruck" {
        node "sql.binaryExpression" {
          childGroup "lhs" {
          }
          childGroup "rhs" {
          }
          childGroup "operator" {
            node "sql.relationalOperator" {
              prop "operator" =
            }
          }
        }
      }
      sidebarBlock "Funktionsaufruf" {
        node "sql.functionCall" {
          prop "name" COUNT
          childGroup "arguments" {
          }
        }
      }
    }
    category "Komponenten" {
      sidebarBlock "SELECT" {
        node "sql.querySelect" {
          childGroup "from" {
            node "sql.from"
          }
          childGroup "where" {
          }
          childGroup "select" {
            node "sql.select"
          }
          childGroup "groupBy" {
          }
        }
      }
      sidebarBlock "FROM" {
        node "sql.from" {
          childGroup "tables" {
          }
        }
      }
      sidebarBlock "JOIN" {
        node "sql.crossJoin" {
          childGroup "table" {
          }
        }
      }
      sidebarBlock "INNER JOIN USING" {
        node "sql.innerJoinUsing" {
          childGroup "table" {
          }
          childGroup "using" {
          }
        }
      }
      sidebarBlock "INNER JOIN ON" {
        node "sql.innerJoinOn" {
          childGroup "on" {
            node "sql.binaryExpression" {
              childGroup "lhs" {
              }
              childGroup "rhs" {
              }
              childGroup "operator" {
                node "sql.relationalOperator" {
                  prop "operator" =
                }
              }
            }
          }
          childGroup "table" {
          }
        }
      }
      sidebarBlock "WHERE" {
        node "sql.where" {
          childGroup "expressions" {
          }
        }
      }
      sidebarBlock "GROUP BY" {
        node "sql.groupBy" {
          childGroup "expressions" {
          }
        }
      }
      sidebarBlock "ORDER BY" {
        node "sql.orderBy" {
          childGroup "expressions" {
          }
        }
      }
    }
  }
}
