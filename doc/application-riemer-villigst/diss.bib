
@article{resnick_scratch:_2009,
	title = {Scratch: programming for all},
	volume = {52},
	issn = {00010782},
	url = {http://portal.acm.org/citation.cfm?doid=1592761.1592779},
	doi = {10.1145/1592761.1592779},
	shorttitle = {Scratch},
	pages = {60},
	number = {11},
	journaltitle = {Communications of the {ACM}},
	author = {Resnick, Mitchel and Silverman, Brian and Kafai, Yasmin and Maloney, John and Monroy-Hernández, Andrés and Rusk, Natalie and Eastmond, Evelyn and Brennan, Karen and Millner, Amon and Rosenbaum, Eric and Silver, Jay},
	urldate = {2018-10-24},
	date = {2009-11-01},
	langid = {english},
	file = {Resnick et al. - 2009 - Scratch programming for all.pdf:/home/marcus/.zotero/zotero/rb288ycs.default/zotero/storage/JWAXU6TY/Resnick et al. - 2009 - Scratch programming for all.pdf:application/pdf}
}

@inproceedings{maloney_scratch:_2004,
	location = {Kyoto, Japan},
	title = {Scratch: a sneak preview},
	isbn = {978-0-7695-2166-4},
	url = {http://ieeexplore.ieee.org/document/1314376/},
	doi = {10.1109/C5.2004.1314376},
	shorttitle = {Scratch},
	abstract = {Scratch is a networked, media-rich programming environment designed to enhance the development of technological fluency at after-school centers in economically-disadvantaged communities. Just as the {LEGO} {MindStorms} robotics kit added programmability to an activity deeply rooted in youth culture (building with {LEGO} bricks), Scratch adds programmability to the media-rich and network-based activities that are most popular among youth at afterschool computer centers. Taking advantage of the extraordinary processing power of current computers, Scratch supports new programming paradigms and activities that were previously infeasible, making it better positioned to succeed than previous attempts to introduce programming to youth.},
	eventtitle = {Proceedings. Second International Conference on Creating, Connecting and Collaborating through Computing, 2004.},
	pages = {104--109},
	booktitle = {Proceedings. Second International Conference on Creating, Connecting and Collaborating through Computing, 2004.},
	publisher = {{IEEE}},
	author = {Maloney, J. and Burd, L. and Kafai, Y. and Rusk, N. and Silverman, B. and Resnick, M.},
	urldate = {2018-10-24},
	date = {2004},
	langid = {english},
	file = {Maloney et al. - 2004 - Scratch a sneak preview.pdf:/home/marcus/.zotero/zotero/rb288ycs.default/zotero/storage/HL7BVRTU/Maloney et al. - 2004 - Scratch a sneak preview.pdf:application/pdf}
}

@inproceedings{fraser_ten_2015,
	location = {Atlanta, {GA}, {USA}},
	title = {Ten things we've learned from Blockly},
	isbn = {978-1-4673-8367-7},
	url = {http://ieeexplore.ieee.org/document/7369000/},
	doi = {10.1109/BLOCKS.2015.7369000},
	abstract = {Over the last four years the Blockly team has learned many lessons which are applicable to block-based programming in general. The following are a collection of ten mistakes we have made, or mistakes commonly made by others. Each issue is presented as noncontroversial folk knowledge without supporting data.},
	eventtitle = {2015 {IEEE} Blocks and Beyond Workshop (Blocks and Beyond)},
	pages = {49--50},
	booktitle = {2015 {IEEE} Blocks and Beyond Workshop (Blocks and Beyond)},
	publisher = {{IEEE}},
	author = {Fraser, Neil},
	urldate = {2018-10-24},
	date = {2015-10},
	langid = {english},
	file = {Fraser - 2015 - Ten things we've learned from Blockly.pdf:/home/marcus/.zotero/zotero/rb288ycs.default/zotero/storage/DVSXF6WI/Fraser - 2015 - Ten things we've learned from Blockly.pdf:application/pdf}
}

@collection{aho_compilers:_2007,
	location = {Boston},
	edition = {2. ed., Pearson internat. ed},
	title = {Compilers: principles, techniques, \& tools},
	isbn = {978-0-321-49169-5},
	shorttitle = {Compilers},
	pagetotal = {1009},
	publisher = {Pearson, Addison Wesley},
	editor = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
	date = {2007},
	note = {{OCLC}: 266438845},
	file = {ALSUdragonbook.pdf:/home/marcus/.zotero/zotero/rb288ycs.default/zotero/storage/SPAHYRE4/ALSUdragonbook.pdf:application/pdf;Table of Contents PDF:/home/marcus/.zotero/zotero/rb288ycs.default/zotero/storage/E79WHD54/Aho et al. - 2007 - Compilers principles, techniques, & tools.pdf:application/pdf}
}

@book{klaeren_macht_2007,
	location = {Wiesbaden},
	edition = {1. Aufl},
	title = {Die Macht der Abstraktion: Einführung in die Programmierung},
	isbn = {978-3-8351-0155-5},
	series = {Leitfäden der Informatik},
	shorttitle = {Die Macht der Abstraktion},
	pagetotal = {321},
	publisher = {Teubner},
	author = {Klaeren, Herbert and Sperber, Michael},
	date = {2007},
	note = {{OCLC}: 180067150},
	file = {Table of Contents PDF:/home/marcus/.zotero/zotero/rb288ycs.default/zotero/storage/VHDMUKJW/Klaeren and Sperber - 2007 - Die Macht der Abstraktion Einführung in die Progr.pdf:application/pdf}
}

@online{jones_haskell_2014,
	title = {Haskell Typed holes},
	url = {https://wiki.haskell.org/index.php?title=GHC/Typed_holes&oldid=58717},
	titleaddon = {Glasgow Haskell Compiler},
	type = {Wiki},
	author = {Jones, Simon Peyton and Leather, Sean and Alkemade, Thijs},
	urldate = {2018-10-25},
	date = {2014},
	file = {GHC/Typed holes - HaskellWiki:/home/marcus/.zotero/zotero/rb288ycs.default/zotero/storage/6P7W49FT/index.html:text/html}
}

@inproceedings{gissurarson_suggesting_2018,
	location = {St. Louis, {MO}, {USA}},
	title = {Suggesting valid hole fits for typed-holes (experience report)},
	isbn = {978-1-4503-5835-4},
	url = {http://dl.acm.org/citation.cfm?doid=3242744.3242760},
	doi = {10.1145/3242744.3242760},
	abstract = {Type systems allow programmers to communicate a partial specification of their program to the compiler using types, which can then be used to check that the implementation matches the specification. But can the types be used to aid programmers during development? In this experience report I describe the design and implementation of my lightweight and practical extension to the typed-holes of {GHC} that improves user experience by adding a list of valid hole fits and refinement hole fits to the error message of typed-holes. By leveraging the type checker, these fits are selected from identifiers in scope such that if the hole is substituted with a valid hole fit, the resulting expression is guaranteed to type check.},
	eventtitle = {the 11th {ACM} {SIGPLAN} International Symposium},
	pages = {179--185},
	booktitle = {Proceedings of the 11th {ACM} {SIGPLAN} International Symposium on Haskell  - Haskell 2018},
	publisher = {{ACM} Press},
	author = {Gissurarson, Matthías Páll},
	urldate = {2018-10-25},
	date = {2018},
	langid = {english},
	file = {Gissurarson - 2018 - Suggesting valid hole fits for typed-holes (experi.pdf:/home/marcus/.zotero/zotero/rb288ycs.default/zotero/storage/ZJH7TRED/Gissurarson - 2018 - Suggesting valid hole fits for typed-holes (experi.pdf:application/pdf}
}

@misc{riemer_blattwerkzeug_2016,
	title = {{BlattWerkzeug} - Eine datenzentrierte Entwicklungsumgebung für den Schulunterricht},
	url = {http://files.blattwerkzeug.de/theses/marcus-riemer-thesis-blattwerkzeug.pdf},
	shorttitle = {{BlattWerkzeug}},
	author = {Riemer, Marcus},
	date = {2016},
	file = {marcus-riemer-thesis-blattwerkzeug.pdf:/home/marcus/.zotero/zotero/rb288ycs.default/zotero/storage/S3L3YR69/marcus-riemer-thesis-blattwerkzeug.pdf:application/pdf}
}