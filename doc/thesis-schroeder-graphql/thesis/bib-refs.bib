
@thesis{riemer2016,
  location = {{Wedel}},
  title = {{{BlattWerkzeug}} - {{Eine}} Datenzentrierte {{Entwicklungsumgebung}} Für Den {{Schulunterricht}}},
  url = {http://files.blattwerkzeug.de/theses/marcus-riemer-thesis-blattwerkzeug.pdf},
  institution = {{Fachhohschule Wedel}},
  type = {Master-Thesis},
  urldate = {2018-09-23},
  date = {2016-10-31},
  author = {Riemer, Marcus}
}

@thesis{Abschlussarbeit-Tom-Hilge,
  location = {{Wedel}},
  title = {Implementierung von Authentifizierung und Autorisierung in eine bereits vorhandene Webanwendung},
  url = {http://files.blattwerkzeug.de/theses/tom-hilge-thesis-authorisation-authentication.pdf},

  urldate = {2020-08-20},
  date = {2019-09-02},
  author = {Hilge, Tom}
}
@thesis{introduction,
  location = {{Brazil}},
  langid = {english},
  title = {Migrating to GraphQL: A Practical Assessment},
  url = {https://arxiv.org/pdf/1906.07535.pdf},
  institution = {{ASERG Group, Department of Computer Science, Federal University of Minas Gerais}},
  type = {Studie},
  urldate = {2020-09-03},
  author = {Gleison Brito, Thais Mombach, Marco Tulio Valente}
}

@online{riemerPostgresCommit,
url = {https://github.com/MarcusRiemer/esqulino/commit/cc6112e0c8fa69d7d5185363df1518b7e668837e},
type = {PostgreSQL Github Commit },
urldate = {2020-05-15},
date = {2017-11-03},
author = {Riemer, Marcus}
}

@online{riemerRailsCommit,
  url = {https://bitbucket.org/marcusriemer/esqulino/commits/cc2b96b8e37aa1a2b47c76352ff0986ca8914431},
  type = {Rails Github Commit},
  urldate = {2020-09-04},
  date = {2017-06-22},
  author = {Riemer, Marcus}
}

@online{riemerJSONSchemaCommit,
  url = {https://bitbucket.org/marcusriemer/esqulino/commits/65b26c600ea72e753a5ae1414a953faac871ad88},
  type = {JSON Schema Github Commit},
  urldate = {2020-09-04},
  date = {2016-05-03},
  author = {Riemer, Marcus}
}


@thesis{fielding-dissertation,
  url = {https://www.ics.uci.edu/~fielding/pubs/dissertation/fielding_dissertation.pdf},
  type = {Dissertation},
  urldate = {2020-29-06},
  date = {2000},
  author = {Roy Thomas Fielding}
}

@online{statista-1,
  langid = {german},
  title = {Anteil der befragten 14- bis 29-Jährigen, die den folgenden Motiven der Internetnutzung voll und ganz oder weitgehend zustimmen },
  url = {https://de.statista.com/statistik/daten/studie/461920/umfrage/motive-fuer-die-nutzung-des-internets-unter-14-bis-29-jaehrigen-in-deutschland/},
  abstract = {Diese Statistik zeigt Ergebnisse einer Umfrage zu den Motiven der Internetnutzung bei den 14- bis 29-Jährigen in Deutschland im Jahr 2015},
  journaltitle = {Statista},
  urldate = {2020-07-01},
  author = {Statista Research Department}
}
@online{ard-zdf,
  langid = {german},
  title = {ARD/ZDF-Online-Studie 2001: Internetnutzung stark zweckgebunden},
  url = {http://www.ard-zdf-onlinestudie.de/files/2001/Online01_Nutzung.pdf},
  abstract = {Nach wie vor sind die zentralen Gründe für die Einrichtung einer Onlineverbindung der Zugriff auf interessante Informationen (88% aller Internet-nutzer) und das Versenden und Empfangen von E-Mails (78%)},
  journaltitle = {Ard-Zdf-Onlinestudie},
  urldate = {2020-07-01},
  author = {Birgit van Eimeren, Heinz Gerhard, Beate Frees}
}

@online{client-to-database,
  langid = {english},
  title = {Is there any reason not to go directly from client-side Javascript to a database?},
  url = {https://softwareengineering.stackexchange.com/questions/180012/is-there-any-reason-not-to-go-directly-from-client-side-javascript-to-a-database},
  abstract = {Answer to a Question on Stackexchange},
  journaltitle = {Software Engineering},
  urldate = {2020-06-30},
  author = {svidgen}
}

@online{graphql-scalablepath,
  langid = {english},
  title = {An Introduction to GraphQL},
  url = {https://www.scalablepath.com/blog/how-to-build-graphql-app-php/},
  abstract = {An Introduction to GraphQL},
  journaltitle = {GraphQL Tutorial: How to Build a PHP App},
  urldate = {2020-06-30},
  author = {Bruno Reis}
}

@online{graphql,
  langid = {english},
  title = {Introduction to GraphQL},
  url = {https://graphql.org/learn/},
  abstract = {Introduction to GraphQL},
  journaltitle = {Introduction to GraphQL},
  urldate = {2020-06-30},
  author = {GraphQL Foundation}
}

@online{graphql-resolver,
  langid = {english},
  title = {GraphQL Resolver Documentation},
  url = {https://www.graphql-tools.com/docs/resolvers/},
  abstract = {GraphQL Resolver Documentation},
  journaltitle = {Resolvers},
  urldate = {2020-07-05},
  author = {The Guild, Inc}
}
@online{graphql-mutations,
  langid = {english},
  title = {GraphQL Mutations Documentation},
  url = {https://graphql.org/learn/queries/#mutations},
  abstract = {GraphQL Mutations Documentation},
  journaltitle = {Mutations},
  urldate = {2020-27-08},
  author = {The Guild, Inc}
}

@online{graphql-execution,
  langid = {english},
  title = {Graphql Query Execution},
  url = {https://graphql.org/learn/execution/},
  abstract = {Graphql Query Execution Documentation},
  journaltitle = {Execution},
  urldate = {2020-06-30},
  author = {GraphQL Foundation}
}

@online{typescript,
  langid = {english},
  title = {Typescript Website},
  url = {https://www.typescriptlang.org/},
  abstract = {TypeScript is a typed superset of JavaScript that compiles to plain JavaScript},
  journaltitle = {TypeScript},
  urldate = {2020-07-03},
  author = {Microsoft Corporation}
}

@online{typescript-typeassertion,
  langid = {english},
  title = {Type assertions},
  url = {https://www.typescriptlang.org/docs/handbook/basic-types.html#type-assertions},
  abstract = {Type assertions are a way to tell the compiler “trust me, I know what I’m doing.” },
  journaltitle = {Basic Types},
  urldate = {2020-07-17},
  author = {Microsoft Corporation}
}
@online{typescript-object,
  langid = {english},
  title = {Object},
  url = {https://www.typescriptlang.org/docs/handbook/basic-types.html#object},
  abstract = {object is a type that represents the non-primitive type, i.e. anything that is not number, string, boolean, symbol, null, or undefined.},
  journaltitle = {Basic Types},
  urldate = {2020-08-17},
  author = {Microsoft Corporation}
}

@online{superset,
  langid = {english},
  title = {superset},
  url = {https://encyclopedia2.thefreedictionary.com/superset},
  abstract = {A programming language that contains all the features of a given language and has been expanded or enhanced to include other features as well},
  journaltitle = {superset},
  urldate = {2020-07-03},
  author = {Farlex, inc}
}

@online{typescript-typesystem-medium,
  langid = {english},
  title = {Understanding TypeScript’s Type System},
  url = {https://medium.com/better-programming/understanding-typescripts-type-system-a3cdec8e95ae},
  abstract = {Medium article},
  journaltitle = {Understanding TypeScript’s Type System},
  urldate = {2020-07-03},
  author = {Luke Mwila}
}

@online{typescript-github-specification,
  langid = {english},
  title = {TypeScript Language Specification},
  url = {https://github.com/microsoft/TypeScript/blob/master/doc/spec.md#1-introduction},
  abstract = {In the JavaScript output, all type annotations have been erased},
  journaltitle = {TypeScript Introduction},
  urldate = {2020-07-03},
  author = {Microsoft Corporation}
}

@online{typescript-utility-types,
  langid = {english},
  title = {TypeScript Utility Types},
  url = {https://www.typescriptlang.org/docs/handbook/utility-types.html},
  abstract = {TypeScript provides several utility types to facilitate common type transformations. These utilities are available globally},
  journaltitle = {Utility Types},
  urldate = {2020-07-03},
  author = {Microsoft Corporation}
}

@online{json-schema,
  langid = {english},
  title = {JSON Schema Documentation},
  url = {https://json-schema.org/},
  abstract = {JSON Schema is a vocabulary that allows you to annotate and validate JSON documents},
  journaltitle = {JSON Schema},
  urldate = {2020-06-30},
  author = {Json Schema Organisation }
}

@online{json-schema-xml,
  langid = {english},
  title = {From XML Schema to JSON Schema -Comparison and Translationwith Constraint Handling Rules},
  url = {http://www.informatik.uni-ulm.de/pm/fileadmin/pm/home/fruehwirth/drafts/Bsc-Nogatz.pdf},
  abstract = {Bachelor Thesis},
  journaltitle = {From XML Schema to JSON Schema -Comparison and Translationwith Constraint Handling Rules},
  urldate = {2020-07-5},
  author = {Falco Nogatz}
}

@online{json-schema-implementations,
  langid = {english},
  title = {JSON Schema Implementations},
  url = {https://json-schema.org/implementations.html},
  abstract = {This page lists implementations with (or actively working towards) support for draft-06 or later.},
  journaltitle = {JSON Schema Implementations},
  urldate = {2020-06-30},
  author = {Json Schema Organisation}
}

@online{postgresql-json,
  langid = {english},
  title = {PostgreSQL json Datatype},
  url = {https://www.postgresql.org/docs/9.5/datatype-json.html},
  abstract = {PostgreSQL 9.5.22 Documentation: JSON data types are for storing JSON},
  journaltitle = {PostgreSQL 9.5.22 Documentation 8.14. JSON Types},
  urldate = {2020-07-02},
  author = {PostgreSQL Global Development Group}
}

@online{postgresql-security,
  langid = {english},
  title = {PostgreSQL Security},
  url = {https://www.postgresql.org/support/security/},
  abstract = {PostgreSQL Known security issues in all supported versions},
  journaltitle = {Security Information},
  urldate = {2020-07-15},
  author = {PostgreSQL Global Development Group}
}

@online{postgresql-hstore,
  langid = {english},
  title = {PostgreSQL hstore Datatype},
  url = {https://www.postgresql.org/docs/9.1/hstore.html},
  abstract = {PostgreSQL 9.1.24 Documentation: This module implements the hstore data type for storing sets of key/value pairs within a single PostgreSQL value},
  journaltitle = {PostgreSQL 9.1.24 Documentation F.16. hstore},
  urldate = {2020-07-02},
  author = {PostgreSQL Global Development Group}
}

@online{rails-migration,
  langid = {english},
  title = {Active Record Migrations},
  url = {https://guides.rubyonrails.org/active_record_migrations.html},
  abstract = {Migrations are a feature of Active Record that allows you to evolve your database schema over time.},
  journaltitle = {Active Record Migrations},
  urldate = {2020-07-16},
  author = {David Heinemeier Hansson}
}

@online{slug-wikipedia,
  langid = {deutsch},
  title = {Slug},
  url = {https://de.wikipedia.org/wiki/Slug},
  abstract = {Wikipedia definition of what a slug is.},
  journaltitle = {Slug},
  urldate = {2020-07-16},
  author = {https://xtools.wmflabs.org/articleinfo-authorship/de.wikipedia.org/Slug?uselang=de}
}

@online{rails-naming-convention,
  langid = {english},
  title = {2.1 Naming Conventions},
  url = {https://edgeguides.rubyonrails.org/active_record_basics.html#naming-conventions},
  abstract = {y default, Active Record uses some naming conventions to find out how the mapping between models and database tables should be created.},
  journaltitle = {Active Record Basics},
  urldate = {2020-07-16},
  author = {David Heinemeier Hansson}
}

@online{angular-service,
  langid = {english},
  title = {Introduction to services and dependency injection},
  url = {https://angular.io/guide/architecture-services},
  abstract = {A component can delegate certain tasks to services, such as fetching data from the server, validating user input, or logging directly to the console.},
  journaltitle = {Angular},
  urldate = {2020-07-16},
  author = {Google}
}

@online{angular-http,
  langid = {english},
  title = {Setup for server communication},
  url = {https://angular.io/guide/http#requesting-data-from-a-server},
  abstract = {Use the HTTPClient.get() method to fetch data from a server.},
  journaltitle = {Angular},
  urldate = {2020-07-17},
  author = {Google}
}

@online{json-schemer,
  langid = {english},
  title = {JSONSchemer Github},
  url = {https://github.com/davishmcclurg/json_schemer},
  abstract = {Use JSON Schemer to validate ruby objects against JSON Schema.},
  journaltitle = {JSONSchemer},
  urldate = {2020-08-18},
  author = {davishmcclurg}
}

@online{ng-for,
  langid = {english},
  title = {Displaying data in views},
  url = {https://angular.io/guide/displaying-data},
  abstract = {The *ngFor in the <li> element is the Angular "repeater" directive.},
  journaltitle = {Displaying data in views},
  urldate = {2020-08-18},
  author = {Google}
}

@online{typesafe-ruby,
  langid = {english},
  title = {typesafe-ruby 0.0.2},
  url = {https://rubygems.org/gems/typesafe-ruby/versions/0.0.2?locale=de},
  abstract = {Adds typesafe macro to class Module, to provide type safe method declarations.},
  urldate = {2020-08-21},
  author = {Dario Rexin}
}

@online{sorbet,
  langid = {english},
  title = {sorbet},
  url = {https://sorbet.org/},
  abstract = {Sorbet is a fast, powerful type checker designed for Ruby.},
  urldate = {2020-08-21},
  author = {Stripe}
}

@online{json-schema-generator,
  langid = {english},
  title = {ts-json-schema-generator},
  url = {https://github.com/vega/ts-json-schema-generator#readme},
  abstract = {Generate json-schemas from your Typescript sources..},
  urldate = {2020-08-21},
  author = {Vega}
}

@online{json-schema-generator-annotations,
  langid = {english},
  title = {Annotationen},
  url = {https://github.com/YousefED/typescript-json-schema#annotations},
  abstract = {The schema generator converts annotations to JSON schema properties.},
  urldate = {2020-08-21},
  author = {YousefED}
}

@online{typescript-conventions,
  langid = {english},
  title = {TypeScript conventions},
  url = {https://makecode.com/extensions/naming-conventions#:~:text=TypeScript%20conventions&text=Names%20are%20%E2%80%9Ccontracted%E2%80%9D%20meaning%20the,methods%2C%20fields%20are%20camel%20cased.},
  abstract = {MakeCode follows the usual TypeScript naming conventions.},
  urldate = {2020-08-24},
  author = {Microsoft}
}

@online{iso-alpha-2,
  langid = {english},
  title = {ISO alpha 2},
  url = {https://www.iso.org/obp/ui/#search},
  abstract = {ISO alpha 2 country codes},
  urldate = {2020-08-22},
  author = {International Organization for Standardization}
}

@online{schema2type,
  langid = {english},
  title = {schema2type},
  url = {https://github.com/kawamataryo/schema2type},
  abstract = {generate TypeScript type definitions from Rails'schema.rb automatically.},
  urldate = {2020-08-24},
  author = {kawamataryo}
}

@online{graphql-sdl,
  langid = {english},
  title = {Core Concepts},
  url = {https://www.howtographql.com/basics/2-core-concepts/},
  abstract = {GraphQL has its own type system that’s used to define the schema of an API.},
  urldate = {2020-08-27},
  author = {Prisma, GraphQL Community}
}

@online{graphql-evolution-graphic,
  langid = {english},
  title = {The evolution of GraphQL server development},
  url = {https://www.prisma.io/blog/the-problems-of-schema-first-graphql-development-x1mn4cb0tyl3#the-evolution-of-graphql-server-development},
  abstract = {The evolution of GraphQL server development},
  urldate = {2020-08-27},
  author = {Prisma}
}

@online{code-first-frameworks,
  langid = {english},
  title = {The Fullstack Tutorial for GraphQL},
  url = {https://www.howtographql.com/},
  abstract = {The Fullstack Tutorial for GraphQL},
  urldate = {2020-08-27},
  author = {Prisma, GraphQL Community}
}

@online{graphql-ruby,
  langid = {english},
  title = {GraphQL Ruby},
  url = {https://graphql-ruby.org/},
  abstract = {Get going fast with the graphql gem, battle-tested and trusted by GitHub, Shopify and Kickstarter. },
  urldate = {2020-08-27},
  author = {Robert Mosolgo}
}

@online{graphql-rubygem,
  langid = {english},
  title = {graphql 0.9.2},
  url = {https://rubygems.org/gems/graphql/versions/0.9.2?locale=de},
  abstract = {Full-fledged implementation of the GraphQL spec. Includes query parsing, static validation, type definition, and query execution.},
  urldate = {2020-08-29},
  author = {Robert Mosolgo}
}

@online{graphql-object-classes,
  langid = {english},
  title = {Objects},
  url = {https://graphql-ruby.org/type_definitions/objects.html#object-classes},
  abstract = {Classes extending GraphQL::Schema::Object describe Object types and customize their behavior.},
  urldate = {2020-08-29},
  author = {Robert Mosolgo}
}

@online{graphql-field-introduction,
  langid = {english},
  title = {Field Introduction},
  url = {https://graphql-ruby.org/fields/introduction},
  abstract = {Object fields expose data about that object or connect the object to other objects.},
  urldate = {2020-08-29},
  author = {Robert Mosolgo}
}

@online{graphql-field-resolution,
  langid = {english},
  title = {Field Resolution},
  url = {https://graphql-ruby.org/fields/introduction#field-resolution},
  abstract = {In general, fields return Ruby values corresponding to their GraphQL return types.},
  urldate = {2020-08-29},
  author = {Robert Mosolgo}
}

@online{graphql-input-type,
  langid = {english},
  title = {Input Typen},
  url = {https://graphql-ruby.org/type_definitions/input_objects.html},
  abstract = {Input object types are complex inputs for GraphQL operations. },
  urldate = {2020-08-29},
  author = {Robert Mosolgo}
}

@online{graphql-extending,
  langid = {english},
  title = {Extending the GraphQL-Ruby Type Definition System},
  url = {https://graphql-ruby.org/type_definitions/extensions.html},
  abstract = {While integrating GraphQL into your app, you can customize the definition DSL. },
  urldate = {2020-08-30},
  author = {Robert Mosolgo}
}

@online{graphql-connection-concept,
  langid = {english},
  title = {Connection Concepts},
  url = {https://graphql-ruby.org/pagination/connection_concepts.html},
  abstract = {Connections are a pagination solution which started with Relay JS, but now it’s used for almost any GraphQL API.},
  urldate = {2020-08-29},
  author = {Robert Mosolgo}
}

@online{graphql-scalar-types,
  langid = {english},
  title = {Scalar Types},
  url = {https://graphql.org/learn/schema/#scalar-types},
  abstract = {A GraphQL object type has a name and fields, but at some point those fields have to resolve to some concrete data.},
  urldate = {2020-08-30},
  author = {GraphQL Foundation}
}

@online{graphql-rails-schemaker,
  langid = {english},
  title = {Graphql Rails Schemaker},
  url = {https://github.com/coleturner/graphql-rails-schemaker},
  abstract = {A rake task to interactively create a GraphQL Schema for Rails Models.},
  urldate = {2020-08-31},
  author = {coleturner}
}

@online{graphql-rake-task,
  langid = {english},
  title = {Class: GraphQL::RakeTask},
  url = {https://graphql-ruby.org/api-doc/1.11.4/GraphQL/RakeTask},
  abstract = {A rake task for dumping a schema as IDL or JSON.},
  urldate = {2020-09-01},
  author = {Robert Mosolgo}
}

@online{graphql-code-generator,
  langid = {english},
  title = {graphql-code-generator},
  url = {https://github.com/dotansimha/graphql-code-generator#readme},
  abstract = {GraphQL Code Generator is a tool that generates code out of your GraphQL schema.},
  urldate = {2020-09-01},
  author = {dotansimha}
}

@online{apollo-loading-states,
  langid = {english},
  title = {Inspecting loading states},
  url = {https://www.apollographql.com/docs/react/data/queries/#inspecting-loading-states},
  abstract = {To take advantage of this information, we set the notifyOnNetworkStatusChange option to true so our query component re-renders while a refetch is in flight},
  urldate = {2020-09-01},
  author = {apollographql}
}

@online{apollo-angular,
  langid = {english},
  title = {Apollo Client},
  url = {https://github.com/apollographql/apollo-client},
  abstract = {Apollo Client is a fully-featured caching GraphQL client with integrations for React, Angular, and more.},
  urldate = {2020-09-01},
  author = {apollographql}
}
@online{apollo-angular-doc,
  langid = {english},
  title = {Apollo Docs},
  url = {https://www.apollographql.com/docs/angular/},
  abstract = {Apollo Client is the ultra-flexible, community driven GraphQL client for Angular, JavaScript, and native platforms.},
  urldate = {2020-09-01},
  author = {apollographql}
}
@online{graphql-client,
  langid = {english},
  title = {GraphQL Clients},
  url = {https://graphql.org/graphql-js/graphql-clients/},
  abstract = {Since a GraphQL API has more underlying structure than a REST API, there are more powerful clients like Relay which can automatically handle batching, caching, and other features.},
  urldate = {2020-09-01},
  author = {GraphQL Foundation}
}

@online{angular-material-table,
  langid = {english},
  title = {Table},
  url = {https://material.angular.io/components/table/overview},
  abstract = {The mat-table provides a Material Design styled data-table that can be used to display rows of data.},
  urldate = {2020-09-01},
  author = {Google}
}

@online{angular-observable,
  langid = {english},
  title = {Observables in Angular},
  url = {https://angular.io/guide/observables-in-angular},
  abstract = {Angular makes use of observables as an interface to handle a variety of common asynchronous operations.},
  urldate = {2020-09-01},
  author = {Google}
}

@online{angular-async-pipe,
  langid = {english},
  title = {AsyncPipe},
  url = {https://angular.io/api/common/AsyncPipe},
  abstract = {The async pipe subscribes to an Observable or Promise and returns the latest value it has emitted.},
  urldate = {2020-09-01},
  author = {Google}
}

@online{angular-subscribe,
  langid = {english},
  title = {Subscribing},
  url = {https://angular.io/guide/observables#subscribing},
  abstract = {An Observable instance begins publishing values only when someone subscribes to it.},
  urldate = {2020-09-01},
  author = {Google}
}


@online{graphql-first-commit,
  langid = {english},
  title = {First Commit},
  url = {https://github.com/graphql/graphql-spec/releases/tag/July2015},
  abstract = {GraphQL's initial public release, published as a work in progress.},
  urldate = {2020-09-01},
  author = {Facebook}
}

@online{graphql-users,
  langid = {english},
  title = {Who’s using GraphQL?},
  url = {https://graphql.org/users/},
  abstract = {GraphQL is used by teams of all sizes in many different environments and languages to power mobile apps, websites, and APIs.},
  urldate = {2020-09-01},
  author = {GraphQL Foundation}
}

@online{github-apollo-undefined,
  langid = {english},
  title = {`this.apollo is undefined` when testing components using generated classes extending Apollo.Query},
  url = {https://github.com/dotansimha/graphql-code-generator/issues/4366/},
  abstract = {Github Issue},
  urldate = {2020-09-01},
  author = {Yannick Schröder}
}


@online{graphql-ruby-guides,
  langid = {english},
  title = {Guides},
  url = {https://graphql-ruby.org/guides},
  abstract = {graphql-ruby Guides},
  urldate = {2020-09-03},
  author = {Robert Mosolgo}
}

@online{howto-graphql-ruby,
  langid = {english},
  title = {graphql-ruby Tutorial - Introduction},
  url = {https://www.howtographql.com/graphql-ruby/0-introduction/},
  abstract = {In this chapter you’ll learn how to build your very own GraphQL server[...]},
  urldate = {2020-09-03},
  author = {Radoslav Stankov}
}

@online{graphql-rubydoc,
  langid = {english},
  title = {graphql},
  url = {https://www.rubydoc.info/gems/graphql},
  abstract = {graphql},
  urldate = {2020-09-03},
  author = {Robert Mosolgo}
}

@online{dev.to-graphql-ruby,
  langid = {english},
  title = {Ruby on Rails GraphQL API Tutorial: From 'rails new' to First Query},
  url = {https://dev.to/isalevine/ruby-on-rails-graphql-api-tutorial-from-rails-new-to-first-query-76h},
  abstract = {GraphQL is a query language we can use to get and mutate data in a database.},
  urldate = {2020-09-03},
  author = {Isa Levine}
}

@online{web-crunch-graphql-ruby,
  langid = {english},
  title = {How to Use GraphQL with Ruby on Rails},
  url = {https://web-crunch.com/posts/how-to-use-graphql-with-ruby-on-rails},
  abstract = {Today, I'm going to build a basic API using GraphQL. },
  urldate = {2020-09-03},
  author = {Andy Leverenz}
}

@online{schema-first-tooling,
  langid = {english},
  title = {The Problems of "Schema-First" GraphQL Server Development},
  url = {https://www.prisma.io/blog/the-problems-of-schema-first-graphql-development-x1mn4cb0tyl3#conclusion-sdl-first-could-potentially-work-but-requires-a-myriad-of-tools},
  abstract = {Conclusion: SDL-first could potentially work, but requires a myriad of tools},
  urldate = {2020-09-03},
  author = {Nikolas Burk, Prisma}
}

@online{ilike-any-postgres,
  langid = {english},
  title = {ILIKE ANY},
  url = {https://docs.snowflake.com/en/sql-reference/functions/ilike_any.html},
  abstract = {Allows case-insensitive matching of strings based on comparison with one or more patterns.},
  urldate = {2020-09-03},
  author = {Snowflake Inc}
}

@online{coalesce-postgres,
  langid = {english},
  title = {PostgreSQL COALESCE},
  url = {https://www.postgresqltutorial.com/postgresql-coalesce/},
  abstract = {The COALESCE function accepts an unlimited number of arguments. It returns the first argument that is not null. If all arguments are null, the COALESCE function will return null.},
  urldate = {2020-09-03},
  author = {PostgreSQL Tutorial Website}
}

@online{includes,
  langid = {english},
  title = {includes},
  url = {https://apidock.com/rails/ActiveRecord/QueryMethods/includes},
  abstract = {Specify relationships to be included in the result set.},
  urldate = {2020-09-03},
}

@online{pundit,
  langid = {english},
  title = {includes},
  url = {https://github.com/varvet/pundit},
  abstract = {Pundit provides a set of helpers which guide you in leveraging regular Ruby classes and object oriented design patterns to build a simple, robust and scalable authorization system.},
  urldate = {2020-09-03},
  author = { varvet }
}

@online{paginator-table,
  langid = {english},
  title = {paginator-table-graphql.component.ts},
  url = {https://bitbucket.org/marcusriemer/esqulino/raw/aa23b8efb21251a58616fc7cdb565d1e48357118/client/src/app/shared/table/paginator-table-graphql.component.ts},
  abstract = {Raw File paginator-table-graphql.component.ts},
  urldate = {2020-09-03},
  author = { varvet }
}




